"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const apiClient_1 = __importDefault(require("./apiClient"));
const url_1 = require("url");
class OuraApiV2Client {
    constructor(accessToken, api) {
        this.api = api ?? new apiClient_1.default(accessToken);
    }
    async dailyActivity(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start_date", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end_date", props.endDate);
        }
        if (props?.nextToken) {
            parameters.set("next_token", props.nextToken);
        }
        const response = await this.api.fetch("/v2/usercollection/daily_activity", parameters.toString());
        return response.body;
    }
    async personalInfo() {
        const response = await this.api.fetch("/v2/usercollection/personal_info");
        return response.body;
    }
    async heartRate(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate_timestamp) {
            parameters.set("start_date", props.startDate_timestamp);
        }
        if (props?.endDate_timestamp) {
            parameters.set("end_date", props.endDate_timestamp);
        }
        if (props?.nextToken) {
            parameters.set("next_token", props.nextToken);
        }
        const response = await this.api.fetch("/v2/usercollection/heartrate", parameters.toString());
        return response.body;
    }
    async sessions(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start_date", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end_date", props.endDate);
        }
        if (props?.nextToken) {
            parameters.set("next_token", props.nextToken);
        }
        const response = await this.api.fetch("/v2/usercollection/session", parameters.toString());
        return response.body;
    }
    async tags(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start_date", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end_date", props.endDate);
        }
        if (props?.nextToken) {
            parameters.set("next_token", props.nextToken);
        }
        const response = await this.api.fetch("/v2/usercollection/tag", parameters.toString());
        return response.body;
    }
    async workouts(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start_date", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end_date", props.endDate);
        }
        if (props?.nextToken) {
            parameters.set("next_token", props.nextToken);
        }
        const response = await this.api.fetch("/v2/usercollection/workout", parameters.toString());
        return response.body;
    }
    /**
     * @deprecated
     * @see https://cloud.ouraring.com/docs/
     */
    async sleep_v1(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end", props.endDate);
        }
        const response = await this.api.fetch("/v1/sleep", parameters.toString());
        return response.body;
    }
    /**
     * @deprecated
     * @see https://cloud.ouraring.com/docs/
     */
    async readiness_v1(props) {
        const parameters = new url_1.URLSearchParams();
        if (props?.startDate) {
            parameters.set("start", props.startDate);
        }
        if (props?.endDate) {
            parameters.set("end", props.endDate);
        }
        const response = await this.api.fetch("/v1/readiness", parameters.toString());
        return response.body;
    }
}
exports.default = OuraApiV2Client;
